pipeline{
    agent {
      label 'chat-app'  
    }
    environment {
    DOCKERHUB_CREDENTIALS = credentials('dockerid')
     registry = "prasanthrk/backend"
        registryCredential = 'dockerid'
        dockerImage = ''
    }
    stages {
        stage('slack notification') {
            steps {
                slackSend channel: 'chatapplication', color: 'ffff00', message: "SlackSend 'backend pipeline has been started ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)'"
            }
        }

        stage('sonar analysis') {
            steps {
                sh 'cd backend && sudo docker run --rm -e SONAR_HOST_URL="http://65.1.86.167:9000" -e SONAR_TOKEN=sqp_f460fdffae1edaa2de26bac8c39b7eec01421cbb -v ".:/usr/src" sonarsource/sonar-scanner-cli "-Dsonar.projectKey=chat-application"'
             }   
        }

        stage('build image') {
            steps {
                sh 'sudo docker rmi -f prasanth/backend'
                sh 'cd backend && sudo docker build -t prasanthrk/backend .'
            }
        }

        stage('Release chatapp') {
            steps {
                script {
                    def packageJSON = readJSON file: 'backend/package.json'
                    def packageJSONVersion = packageJSON.version
                    echo "${packageJSONVersion}"
                    sh "zip -r backend/src-${packageJSONVersion}.zip backend/src"
                    sh "curl -v -u admin:rk@098rk --upload-file backend/src-1.0.0.zip http://13.232.70.180:8081/repository/chat-application-backend/"
                     }   
                 }
             }

        stage('docker-login') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | sudo docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage('pushing image to dockerhub') {
            steps {
                  sh 'sudo docker push prasanthrk/backend'
            }
        }

        stage('Remove old images') {
             steps {
                 sh 'sudo docker rmi -f prasanthrk/backend'
            }
        }

        stage('Deploy to container') {
            steps {
                sh 'sudo docker container rm --force chatdb'
                sh 'sudo docker container rm --force backend'
                sh 'sudo docker network rm chatnetwork'
                sh 'sudo docker network create -d bridge chatnetwork'
                sh 'sudo docker run -d --name chatdb -p 5432:5432 --network chatnetwork -e POSTGRES_PASSWORD=password postgres'
                sh 'sudo docker container run -dt --name backend -p 8080:8080 --network chatnetwork -e DATABASE_URL=postgresql://postgres:password@chatdb:5432/postgres -e PORT=8080 -e NODE_ENV=development -e JWT_SECRET=Odurxn3pec8mwtgwI/QJIt3hsttGpQjC3Tc3wz1K6N4= -e SENDGRID_API_KEY=sendgridapikey -e SENDGRID_FROM_EMAIL=prasanth.rk22@gmail.com prasanthrk/backend'
            }
        }
    }
post {
success {
    script {
        slackSend(
            channel: 'chatapplication',
            color: 'good',
            message: 'hi..CONGRATULATIONS backend job is success !!! backend build got succeeded Thanks...prasanth',
            tokenCredentialId: 'jenkin-project'
        )

        emailext body: 'Backend chat application job got succeed.$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS Check console output at $BUILD_URL to view the results.. Thankyou prasanth',
            recipientProviders: [developers()],
            subject: 'chat app build got successed',
            to: 'prasanth.rk66@gmail.com'
    }
}
    failure {
        script {
            slackSend(
                channel: 'chatapplication',
                color: 'danger',
                message: 'backend job got failed. Please check the build logs for more details. Thanks...prasanth',
                tokenCredentialId: 'jenkin-project'

            )
            emailext body: 'backend chat application job got failed.$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS Check console output at $BUILD_URL to view the results.. Thankyou prasanth',
            recipientProviders: [developers()],
            subject: 'chat app build got failed',
            to: 'prasanth.rk66@gmail.com'
        }
    }
}
}
