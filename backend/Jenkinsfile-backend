pipeline{
    agent any

    stages {
        stage('sonar analysis') {
            steps {
                sh 'cd backend && sudo docker run --rm -e SONAR_HOST_URL="http://43.205.211.57:9000" -e SONAR_TOKEN=sqp_014df1a65b91656b718654a7dfc3ce3fbeaff6ca -v ".:/usr/src" sonarsource/sonar-scanner-cli "-Dsonar.projectKey=message"'
             }   
        }

        stage('build image') {
            steps {
                sh 'sudo docker rmi -f prasanth/backend'
                sh 'sudo docker network create -d bridge chatnetwork1'
                sh 'cd backend && sudo docker build -t prasanthrk/backend .'
            }
        }
        stage('app deploy') {
            steps {
                sh 'sudo docker container rm --force chatdb'
                sh 'sudo docker container rm --force backend'
                sh 'sudo docker run -d --name chatdb -p 5432:5432 --network chatnetwork1 -e POSTGRES_PASSWORD=password postgres'
                sh 'sudo docker container run -dt --name backend -p 8081:8081 --network chatnetwork1 -e DATABASE_URL=postgresql://postgres:password@chatdb:5432/postgres -e PORT=8081 -e NODE_ENV=development -e JWT_SECRET=Odurxn3pec8mwtgwI/QJIt3hsttGpQjC3Tc3wz1K6N4= -e SENDGRID_API_KEY=sendgridapikey -e SENDGRID_FROM_EMAIL=prasanth.rk22@gmail.com prasanthrk/backend'
            }
        }
    }
}

